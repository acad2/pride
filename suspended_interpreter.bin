ccopy_reg
_reconstructor
p0
(cmpre
Environment
p1
c__builtin__
object
p2
Ntp3
Rp4
((lp5
(F198.82064690249885
g0
(cmpre
Instruction
p6
g2
Ntp7
Rp8
(dp9
S'created_at'
p10
F0.013407168543818349
sS'args'
p11
(tsS'execute_at'
p12
F198.82064690249885
sS'kwargs'
p13
(dp14
sS'method'
p15
S'run'
p16
sS'component_name'
p17
S'Network'
p18
sbNtp19
a(F198.85019980783434
g0
(g6
g2
Ntp20
Rp21
(dp22
g10
F0.005376951372074921
sg11
(tsg12
F198.85019980783434
sg13
(dp23
sg15
g16
sg17
S'User_Input'
p24
sbNtp25
a(F200.05657401661622
g0
(g6
g2
Ntp26
Rp27
(dp28
g10
F0.013419929173777568
sg11
(tsg12
F200.05657401661622
sg13
(dp29
sg15
S'_update_range_size'
p30
sg17
g18
sbNtp31
a(dp32
g24
g0
(cuserinput
User_Input
p33
g2
Ntp34
Rp35
(dp36
S'memory_mode'
p37
I-1
sS'deleted'
p38
I00
sS'run_instruction'
p39
g21
sg11
(tsS'objects'
p40
(dp41
sS'memory_size'
p42
I4096
sS'thread_started'
p43
I00
sS'priority'
p44
F0.04
sS'_respond_with'
p45
(lp46
sS'verbosity'
p47
S''
p48
sS'instance_name'
p49
g24
sS'listeners'
p50
(lp51
S'Shell'
p52
asS'auto_start'
p53
I01
sg13
(dp54
sS'input'
p55
g48
sS'instance_number'
p56
I0
sbsg52
g0
(cmpre._metapython
Shell
p57
g2
Ntp58
Rp59
(dp60
S'username'
p61
S'root'
p62
sS'prompt'
p63
S'>>> '
p64
sg37
I-1
sg38
I00
sS'startup_definitions'
p65
S'import base\n\nconstructor = base.Base()\nenvironment = constructor.environment\n    \ncreate = constructor.create\n\ndef print_components(mode="keys", size=(None, )):\n    _slice = slice(*size)\n    print getattr(constructor.environment.Component_Resolve, mode)()[_slice]\n\ndef get_component(instance_name):\n    return constructor.environment.Component_Resolve[instance_name]\n\ndef delete(instance=None):\n    Instruction(getattr(instance, "instance_name", instance), "delete").execute()\n                    \ndef build_docs(site_name=\'\'):\n    site_name = site_name if site_name else raw_input("Please enter site name: ")\n    \n    Instruction("Metapython", "create", "mpre.docbuilder.Documentation_Builder",\n                 site_name=site_name).execute()\n\nInstruction("Metapython", "save_state").execute()\n                 \ndef update(component="Network"):\n    Instruction(component, "update").execute()\n#n = get_component("Network")\n#s = n.create("network.Socket")    \n'
p66
sg40
(dp67
sg42
I4096
sS'password'
p68
g68
sS'parse_args'
p69
I01
sg49
g52
sg45
(lp70
sS'target'
p71
S'Interpreter_Service'
p72
sg47
g48
sS'lines'
p73
g48
sg56
I0
sS'user_is_entering_definition'
p74
I00
sS'logged_in'
p75
I01
sS'email'
p76
g48
sbsg18
g0
(