import os
from utilities import bytes_to_integer, integer_to_bytes

#Q = 4294967291
#P = 340282366524797650892052919558537740179
#G = 54521249035780310435070665414012456167

Q=0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffecf
P=
G=
#log2(P) = 32768

random_number = lambda size : bytes_to_integer(bytearray(os.urandom(size)))

def random_number(q):
    in_bytes = integer_to_bytes(q)
    key = bytearray(os.urandom(len(in_bytes)))
    key_int = bytes_to_integer(key)
    while key_int > q:
        key.pop(-1)
        key_int = bytes_to_integer(key)
    return key_int
   
def generate_key(q):    
    key = random_number(q)
    assert 1 < key < q
    return key
    
def generate_private_key(Q):
    return generate_key(Q)
    
def generate_public_key(g, private, p):
    return pow(g, private, p)
    
def generate_token(public_b, private_a, key_a, p):
    return pow(public_b, private_a * key_a, p)
    
def generate_shared_secret(token_b, key_a, p):
    return pow(token_b, key_a, p)
    
def initiate_key_exchange(q=Q, g=G, p=P):
    key = generate_key(q)
    private = generate_private_key(q)
    public = generate_public_key(g, private, p)
    return (private, key, public)
    
def advance_key_exchange(public_key_b, private_a, key_a, p=P):
    return generate_token(public_key_b, private_a, key_a, p)
        
def finish_key_exchange(token_b, key_a, p=P):
    return generate_shared_secret(token_b, key_a, p)
                
def test_authenticated_key_exchange():
    key_a = generate_key(Q)
    private_a = generate_private_key(Q)
    public_a = generate_public_key(G, private_a, P)
    
    key_b = generate_key(Q)
    private_b = generate_private_key(Q)
    public_b = generate_public_key(G, private_b, P)
    
    token_a = generate_token(public_b, private_a, key_a, P)
    token_b = generate_token(public_a, private_b, key_b, P)
    
    secret1 = generate_shared_secret(token_b, key_a, P)
    secret2 = generate_shared_secret(token_a, key_b, P)
    assert secret1 == secret2
    
def test_initiate_advance_finish():
    private_a, key_a, public_a = initiate_key_exchange()    
    private_b, key_b, public_b = initiate_key_exchange()
    
    token_a = advance_key_exchange(public_b, private_a, key_a)
    token_b = advance_key_exchange(public_a, private_b, key_b)
    
    secret1 = finish_key_exchange(token_b, key_a)
    secret2 = finish_key_exchange(token_a, key_b)
    assert secret1 == secret2
    
if __name__ == "__main__":
    test_authenticated_key_exchange()
    test_initiate_advance_finish()
    